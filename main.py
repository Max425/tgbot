import logging
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from config import TOKEN
from db import init_db, add_user, get_available_keys, buy_key

logging.basicConfig(level=logging.INFO)

bot = Bot(token=TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def start(msg: types.Message):
    args = msg.text.split()
    ref = int(args[1]) if len(args) > 1 and args[1].isdigit() else None
    add_user(msg.from_user.id, ref)
    await msg.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –º–∞–≥–∞–∑–∏–Ω –∫–ª—é—á–µ–π.\n\n"
        "üì¶ /buy ‚Äî –∫—É–ø–∏—Ç—å –∫–ª—é—á\nüí∞ /balance ‚Äî –±–∞–ª–∞–Ω—Å\nüë• /ref ‚Äî —Ç–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞"
    )

@dp.message(Command("buy"))
async def show_keys(msg: types.Message):
    keys = get_available_keys()
    if not keys:
        await msg.answer("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–ª—é—á–µ–π.")
        return

    text = "\n".join([f"{k[0]}. üîë {k[1][:4]}****" for k in keys])
    await msg.answer(f"üì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–ª—é—á–∏:\n{text}\n\nüí¨ –ù–∞–ø–∏—à–∏ –Ω–æ–º–µ—Ä –∫–ª—é—á–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏.")

@dp.message(lambda m: m.text.isdigit())
async def handle_buy(msg: types.Message):
    key_id = int(msg.text)
    key = buy_key(key_id)
    if not key:
        await msg.answer("‚ùå –ö–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —É–∂–µ –∫—É–ø–ª–µ–Ω.")
    else:
        await msg.answer(f"‚úÖ –ü–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞!\n–í–æ—Ç —Ç–≤–æ–π –∫–ª—é—á:\n`{key}`", parse_mode='Markdown')

@dp.message(Command("ref"))
async def ref_link(msg: types.Message):
    me = await bot.get_me()
    link = f"https://t.me/{me.username}?start={msg.from_user.id}"
    await msg.answer(f"üë• –¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n{link}")

@dp.message(lambda m: m.content_type == 'photo')
async def handle_payment(msg: types.Message):
    await msg.answer("üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–ª—É—á–µ–Ω! –ê–¥–º–∏–Ω –ø—Ä–æ–≤–µ—Ä–∏—Ç –∏ –ø–æ–ø–æ–ª–Ω–∏—Ç –±–∞–ª–∞–Ω—Å.")

async def main():
    init_db()  # —Å–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    await dp.start_polling(bot)

if __name__ == "__main__":

    asyncio.run(main())
